const { mdLinks } = require('../src/mdLinks.js')

const arr = [
    {file: 'readmeExample.md', text: 'Preámbulo', href: 'https://es.wikipedia.org/wiki/Markdown', status: '200',result: 'OK'},
    {file: 'readmeExample.md', text: 'Markdown', href: 'https://es.wikipedia.org/wiki/Markdown', status: '200', result: 'OK'},
    {file: 'readmeExample.md', text: 'Node.js', href: 'http://nodejs.org/', status: '200', result: 'OK'},
    {file: 'readmeExample.md', text: 'PIXAR', href: 'https://www.lego.com/en-us/notfound', status: '404', result: 'FAIL'},
    {file: 'readmeExample.md', text: 'Arreglos', href: 'https://blueg.co.uk/404', status: 'undefined: no se recibió respuesta', result: 'FAIL'}
  ]

// jest.mock('../src/main.js',()=>{
//     const main =jest.requireActual('../src/main.js')
//     main.readmdLinks = jest.fn(()=>[
//         Promise.resolve({
//            file: 'readmeExample.md', text: 'Markdown', href: 'https://es.wikipedia.org/wiki/Markdown',status: '200', result: 'OK'
//            }),
//        Promise.resolve({
//            file: 'readmeExample.md',text: 'Node.js',href: 'http://nodejs.org/', status: '200', result: 'OK'
//            }),
//        Promise.resolve({
//            file: 'readmeExample.md', text: 'PIXAR', href: 'https://www.lego.com/en-us/notfound', status: '404', result: 'FAIL'
//            }) 
//        ]);
//        return main
// });

test('Para una ruta ------', async()=>{
    const data = await mdLinks('readmeExample.md',{validate:true});
    expect(data).toEqual(arr);
})